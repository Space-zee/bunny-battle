/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Groth16Verifier,
  Groth16VerifierInterface,
} from "../../../contracts/createVerifier.sol/Groth16Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[1]",
        name: "_pubSignals",
        type: "uint256[1]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061060c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806343753b4d14610030575b600080fd5b61004a60048036038101906100459190610537565b610060565b60405161005791906105bb565b60405180910390f35b600061048b565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110610098576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100ce576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa9150816100fe576000805260206000f35b505050505050565b600060808601600087017f12db49798cc57ba5299c37d7f2507c3ae10142c6f731d2ef29b46de140efe7c081527eac5d57cd740c98979e9c7dd3ab87f38aa755ef907b97b2b0fd62c4607e242360208201526101a860008801357f288822ba3718c128771b9dece07fd89f944117bbd23883965a6897054d9655557f181b1e4961201ce5e5fc212dbdd2d01172d9bd1296c5b08055198cc079b3701f8461009b565b833582527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208501357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020830152843560408301526020850135606083015260408501356080830152606085013560a08301527f1e89a989c13a1bb979f000e89e4261bd83982313a4841327e25415b4d1a3b1a760c08301527f2bfca8590b637814d5a3677bc828a93d0d3c8b676a2495c6341239854988e17560e08301527f1fefab116c650398ba32e158785dddbfbe16aaead406fba04809d5e87330fa076101008301527e61ce140af67ceeb2e969a50140928b8021f1d08f45e47d970ffb00ddab728e6101208301527f0fe70591e91973e0276a7d9db43b84cd373b2cb5c760e3b7972a466b1ca3921c6101408301527f0bc466c0fa75b57218231e9bf209b4109688e4cafc43df2882ef982178dce424610160830152600088015161018083015260206000018801516101a08301527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08301527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08301527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008301527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220830152853561024083015260208601356102608301527f0fe4ebec1ef4e305b7e3323e09f8cc4539f6617b20ff789cb4930efa7f5989106102808301527f06f7b0aea7872e49b64ef41205037cc0585fe07ffcd8d7d3d08dff1d6cdcde8e6102a08301527f0d17f803303ddd485a83391eef34f2ce65d7d1d597b7a298dc3b0d3f81bae9e46102c08301527f01126e427593bab83ae2763881713ac9ecfb58a02b206fa0e190a14df94f6bba6102e08301526020826103008460086107d05a03fa82518116935050505095945050505050565b60405161038081016040526104a36000840135610067565b6104b06020840135610067565b6104bd818486888a610106565b8060005260206000f35b600080fd5b600080fd5b6000819050826020600202820111156104ed576104ec6104cc565b5b92915050565b60008190508260406002028201111561050f5761050e6104cc565b5b92915050565b600081905082602060010282011115610531576105306104cc565b5b92915050565b6000806000806101208587031215610552576105516104c7565b5b6000610560878288016104d1565b9450506040610571878288016104f3565b93505060c0610582878288016104d1565b92505061010061059487828801610515565b91505092959194509250565b60008115159050919050565b6105b5816105a0565b82525050565b60006020820190506105d060008301846105ac565b9291505056fea26469706673582212200e3441c4354338d3efd03d6b1b0fd984f1b3095eac3934fe5ebbc49894e84ec464736f6c63430008180033";

type Groth16VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Groth16VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Groth16Verifier__factory extends ContractFactory {
  constructor(...args: Groth16VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Groth16Verifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Groth16Verifier__factory {
    return super.connect(runner) as Groth16Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Groth16VerifierInterface {
    return new Interface(_abi) as Groth16VerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Groth16Verifier {
    return new Contract(address, _abi, runner) as unknown as Groth16Verifier;
  }
}
